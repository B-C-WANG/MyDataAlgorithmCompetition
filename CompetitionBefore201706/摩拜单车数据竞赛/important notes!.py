import Geohash as gh

#Geohash is download from : https://github.com/vinsci/geohash






#train数据集：
#订单id：没用
#用户id：同一用户可能存在某一些选项的start和end，朴素贝叶斯可以预先处理
#bike id：单车的id，恐怕难以找到和end location的相关性
#time： 我倒是愿意把这个称作帧，每一个帧（时刻），有一个开始时间，之后结束时会有一个location
#开始的location
#end的location


# train数据集和test数据集的日期相差很多，将近10天


#思路：
#首先去掉订单这一列。然后时间这一列要分成两列：日期和时间，因为属于不同因素。
#关于userid，每个id可能重复3——5次，用朴素贝叶斯可能方便找出

#userid和bikeID很麻烦，因为是连续数值规定的，实际上数值相互
#之间的大小关系又不能给相关性提供贡献，所以相互之间实际上是并列的
#但如果采用one-hot的话，维度太高，所以
#usrid和bikeid都应该被其他指标代替，而这个指标能够体现他们的特征
#于是我打算用user最常去的三个地方的坐标代替userid（用贝叶斯概率）
#同时bikeid也是一样
#等等！如果我们逆过来呢？把某个地方分解成最常用的3个客户怎样？可能这并不合理！
#为什么要这样分，我希望用一个种类少的多维数据代替一个种类多的单维度数据，如：
#用3个早中晚的骑车数据（每个数据有200个取值），去代替1个数据表示的2000个人的骑行路线
#所以TODO：先去统计哪个指标种类最少，将最少的label作为one-hot
#然后用贝叶斯概率代替掉其他的。。。



#思路2：
#上面说到用label去代替，但实际上这里有一个trick，这个location数据
#是具有“距离性的”，不是并列的标签，不用one——hot，所以非常方便，用这个就行了
#这个操作，就相当于我们在给用户和车辆进行一个“位置画像”
#————————————————————————
##~！！也就是说，不管是test还是train，第一步就是根据
#用户和车辆的历史location数据进行画像
#但是这里的问题就是：如果我们在训练集对用户和车辆画像了，
#而测试集又没有一样的用户和车辆怎么办？那就只能够对区域画像了吗？
#所以TODO：先检测或者询问数据提供方：test是否包含train中没有的用户和车辆


#统计userid，bikeid和start location的种类数目，缓存到文件





#统计结果：
# 349693
# 93106
# 2
# 3214097
# 485465
# 763615
# 85828
# 从上到下为：(['userid', 'geohashed_start_loc', 'biketype', 'orderid',
# 'bikeid', 'starttime', 'geohashed_end_loc'])
# 972521
# 83243
# 2
# 2002997
# 440846
# 455666


#下一步，我们这样分析：首先车辆，可以只用三个常用location来代替特征！而车辆与用户和时间等关系不密切，就不用
#用户id来表示车辆特征，
#车辆特征数值化后（而不是标签化，标签化需要非常高维度的one-hot编码矩阵），用户id就可以用车辆的location来代替
#用户id被车辆location代替后，还被最常用的三个时间和3个起始地点代替
#这样，我们就把userid和bikeID用时间和location等代替掉了，至于时间需不需要被代替就值得考虑了，还是说直接作为变量？


#这样，1维的车辆id变成了3x2（location是2维）的数据，
#user变成了[3,3,3x[3x2]]的24维数据了，这样消除了标签，增加了维度










# 当完成特征提取之后，我们不需要对这些特征提取进行什么改动，尝试全部正则化即可，神经网络会自动学习到这些特征！
